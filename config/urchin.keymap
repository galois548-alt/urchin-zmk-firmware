/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include "keymap_italian.h"

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&sk {
    // don't release mods on other mods presses

    ignore-modifiers;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        lhht: left-hand-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            hold-trigger-key-positions = <7 8 9 39 40 41 25 26 27 7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47>;
        };

        rhht: rhht {
            compatible = "zmk,behavior-hold-tap";
            label = "RHHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            hold-trigger-key-positions = <13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44 0 1 2 3 4 5 13 14 15 16 17 18>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        lang_switch {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 20>;
        };

        kp_bslh {
            bindings = <&kp BACKSLASH>;
            key-positions = <10 11>;
        };

        kp_lbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        kp_apos {
            bindings = <&kp APOS>;
            key-positions = <40 20 21>;
        };

        kp_rbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 9>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <30 31>;
        };

        mode {
            bindings = <&mo 3>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp Q          &kp W         &kp E         &kp R          &kp T        &kp Y        &kp U          &kp I         &kp O    &kp P
&lhht LCTRL A  &lhht LALT S  &lhht LGUI D  &lhht LSHFT F  &kp G        &kp H        &rhht RSHFT J  &rhht RGUI K  &kp L    &kp SEMI
&kp Z          &kp X         &kp C         &kp V          &kp B        &kp N        &kp M          &kp COMMA     &kp DOT  &kp FSLH
                                           &kp LGUI       &lt 2 SPACE  &lt 1 ENTER  &kp BACKSPACE
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            label = "Sym.";
            bindings = <
&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET     &kp AMPS          &kp ASTRK      &kp LPAR  &kp RPAR
&trans    &trans  &trans    &trans    &trans     &kp MINUS     &kp LC(UP_ARROW)  &kp LBKT       &kp RBKT  &kp BSLH
&trans    &trans  &trans    &trans    &trans     &kp LC(LEFT)  &kp LC(DOWN)      &kp LC(RIGHT)  &kp RBRC  &kp PIPE
                            &trans    &kp SPACE  &trans        &trans
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            label = "Mods";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N7  &kp N8  &kp N9     &kp N0
&trans        &trans        &trans        &trans        &trans  &trans        &trans  &trans  &kp MINUS  &kp EQUAL
&trans        &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans     &trans
                                          &trans        &trans  &trans        &trans
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            label = "FRow";
            bindings = <
&kp F1           &kp F2          &kp F3        &kp F4        &kp F5           &kp F6           &kp F7           &kp F8           &kp F9           &kp F10
&bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp F11
&rgb_ug RGB_OFF  &rgb_ug RGB_ON  &out OUT_BLE  &out OUT_USB  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp F12
                                               &trans        &trans           &kp INS          &kp DEL
            >;
        };
    };
};
